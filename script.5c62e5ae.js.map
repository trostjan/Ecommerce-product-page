{"version":3,"sources":["app/js/util/addGlobalEventListener.js","app/js/toggle.js","app/js/lightbox.js","app/js/cart.js","app/js/script.js"],"names":["addGlobalEventListener","type","selector","callback","document","addEventListener","e","target","matches","addGlobalEventListenerQS","querySelector","mobileMenuToggle","classList","toggle","cartToggle","setFeaturedItem","dataset","featured","featuredImage","setCurrentFeaturedImage","featuredImageSrc","src","SESSION_STORAGE_KEY_PREFIX","cartSetup","initialLoadItems","incrementItemCount","decreaseItemCount","addItemsToCart","removeProduct","loadCartSessionItemQuantity","renderCartItems","productQuantity","productQuantityValue","innerText","saveCartSession","sessionStorage","removeItem","renderEmptyCart","currentQuantity","quantityToAdd","parseInt","setItem","JSON","stringify","getItem","itemsContainer","checkoutBtn","itemQuantityHeader","ITEM_PRICE","innerHTML","templateCloneItem","templateItem","content","cloneNode","itemQuantity","totalPrice","totalPriceValue","appendChild","remove","add"],"mappings":"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","file":"script.5c62e5ae.js","sourceRoot":"..","sourcesContent":["export default function addGlobalEventListener(type, selector, callback) {\r\n    document.addEventListener(type, e => {\r\n      if (e.target.matches(selector)) {\r\n        callback(e)\r\n      }\r\n    })\r\n  }\r\n\r\nexport function addGlobalEventListenerQS(type, selector, callback){\r\n  const selectorelemetn = document.querySelector(selector)\r\n  document.querySelector(selector).addEventListener(type, callback)\r\n}","import { addGlobalEventListenerQS } from \"./util/addGlobalEventListener.js\"\r\n\r\nexport function mobileMenuToggle(){\r\n    addGlobalEventListenerQS(\"click\", \"#btnHamburger\", () => {\r\n        const header = document.querySelector(\".header\")\r\n        header.classList.toggle(\"open\")\r\n    })\r\n}\r\n\r\nexport function cartToggle(){\r\n    addGlobalEventListenerQS(\"click\", \".header_cart_icon\", () => {\r\n        const cart = document.querySelector(\".cart\")\r\n        cart.classList.toggle(\"open\")\r\n    })\r\n}\r\n\r\n","import addGlobalEventListener from \"./util/addGlobalEventListener.js\"\r\n\r\nexport function setFeaturedItem(){\r\n    addGlobalEventListener(\"click\", \"[data-featured]\", e => {\r\n        if(e.target.dataset.featured == \"active\") return\r\n    \r\n        const featuredImage = e.target\r\n        const previousFeaturedImage = document.querySelector(\"[data-featured = 'active']\")\r\n    \r\n        previousFeaturedImage.dataset.featured = \"\"\r\n        featuredImage.dataset.featured = \"active\"\r\n    \r\n        setCurrentFeaturedImage(featuredImage)\r\n    })\r\n\r\n    function setCurrentFeaturedImage(featuredImage){\r\n        const featuredImageSrc = featuredImage.src\r\n        const featuredImageContainer = document.querySelector(\".product_images-featured\")\r\n        featuredImageContainer.src = featuredImageSrc\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import addGlobalEventListener, { addGlobalEventListenerQS } from \"./util/addGlobalEventListener\"\r\n\r\nconst SESSION_STORAGE_KEY_PREFIX = \"CART-ITEM-COUNT\"\r\n\r\n\r\nexport function cartSetup(){\r\n    initialLoadItems()\r\n\r\n    addGlobalEventListenerQS(\"click\", \".product_btngroup-add\", incrementItemCount)\r\n    addGlobalEventListenerQS(\"click\", \".product_btngroup-remove\", decreaseItemCount)\r\n    addGlobalEventListenerQS(\"click\", \".product_btn-addtocart\", addItemsToCart)\r\n    addGlobalEventListener(\"click\", \".cart_item_delete\", removeProduct)\r\n}\r\n\r\nfunction initialLoadItems(){\r\n    const sessionItemsQuantityStorage = loadCartSessionItemQuantity()\r\n    if(sessionItemsQuantityStorage == 0) return\r\n    renderCartItems()\r\n}\r\n\r\nfunction incrementItemCount(){\r\n    const productQuantity = document.querySelector(\".product_btngroup-countitems\")\r\n    let productQuantityValue = productQuantity.innerText\r\n    productQuantityValue ++\r\n    productQuantity.innerText = productQuantityValue\r\n}\r\n\r\nfunction decreaseItemCount(){\r\n    const productQuantity = document.querySelector(\".product_btngroup-countitems\")\r\n    let productQuantityValue = productQuantity.innerText\r\n    if(productQuantityValue == 0) return\r\n    productQuantityValue --\r\n    productQuantity.innerText = productQuantityValue\r\n}\r\n\r\nfunction addItemsToCart(){\r\n    const productQuantity = document.querySelector(\".product_btngroup-countitems\")\r\n    const productQuantityValue = productQuantity.innerText\r\n    const currentQuantity = loadCartSessionItemQuantity()\r\n    saveCartSession(productQuantityValue, currentQuantity)\r\n    renderCartItems()\r\n    productQuantity.innerText = 0\r\n}\r\n\r\nfunction removeProduct(){\r\n    sessionStorage.removeItem(SESSION_STORAGE_KEY_PREFIX)\r\n    renderEmptyCart()\r\n}\r\n\r\n\r\nfunction saveCartSession(currentQuantity, quantityToAdd){\r\n    const productQuantity = parseInt(currentQuantity) + parseInt(quantityToAdd)\r\n    sessionStorage.setItem(SESSION_STORAGE_KEY_PREFIX, JSON.stringify(productQuantity))\r\n}\r\n\r\nfunction loadCartSessionItemQuantity(){\r\n    return sessionStorage.getItem(SESSION_STORAGE_KEY_PREFIX) || 0\r\n}\r\n\r\nconst itemsContainer = document.querySelector(\".cart_items\")\r\nconst checkoutBtn = document.querySelector(\".cart_checkout\")\r\nconst itemQuantityHeader = document.querySelector(\".header_item-count\")\r\nconst ITEM_PRICE = 125\r\n\r\nfunction renderCartItems(){\r\n    itemsContainer.innerHTML = \"\"\r\n    const templateCloneItem = templateItem.content.cloneNode(true)\r\n    const itemQuantity = templateCloneItem.querySelector(\".cart_item_quantity\")\r\n\r\n    const totalPrice = templateCloneItem.querySelector(\".cart_total_price\")\r\n\r\n    const currentQuantity = loadCartSessionItemQuantity()\r\n    itemQuantity.innerText = `x ${currentQuantity}`\r\n    itemQuantityHeader.innerText = currentQuantity\r\n\r\n    const totalPriceValue = currentQuantity * ITEM_PRICE\r\n    totalPrice.innerText = `$${totalPriceValue}`\r\n    \r\n    itemsContainer.appendChild(templateCloneItem)\r\n    checkoutBtn.classList.remove(\"hide\")\r\n}\r\n\r\nfunction renderEmptyCart(){\r\n    itemsContainer.innerHTML = \"<div class='cart_empty'>Your cart is empty.</div>\"\r\n    checkoutBtn.classList.add(\"hide\")\r\n    itemQuantityHeader.innerText = 0\r\n}","import { mobileMenuToggle, cartToggle } from \"./toggle.js\"\r\nimport { setFeaturedItem } from \"./lightbox.js\"\r\nimport { cartSetup } from \"./cart.js\"\r\n\r\n\r\nmobileMenuToggle()\r\ncartToggle()\r\nsetFeaturedItem()\r\ncartSetup()\r\n\r\n\r\n\r\n\r\n\r\n"]}